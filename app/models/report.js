var mongoose = require('mongoose'),
	crypto = require('crypto'),
	Schema = mongoose.Schema;
	User = require('mongoose').model('User'), //loading User model

//logs
var logSchema = new Schema({
        logname: String,
        logdesc: String,
        logdate: {
        	type: Date,
        	default: Date.now
        }
});
 
//report
var reportSchema = new Schema({
	username: {
		type: Schema.Types.ObjectId,
		ref: 'User' 
	},
	name: String,
	reportname: { //
		type: String,
		trim: true, //trim to clean 
		unique:true

	}
    log: [logSchema]
    date: {
    	type: Date,
    	default: Date.now
    }
})

reportSchema.pre('save',  
	function(next) {
		if (this.username) { // validation , need to be tested xD
		}
		next();
	}

reportSchema.statics.findUniqueReportname = function(reportname, suffix, callback){
	var _this = this; 
	var possibleReportname = reportname + (suffix || '');
	//Con esto dejo habilitado si quiero encontrar reportes con algun buscador asdf

	_this.findOne(
		{reportname: possibleReportname},
		function(err, report) {
			if (!err) {
				if (!report) {
					callback(possibleReportname);
				}
				else {
					return _this.findUniqueReportname(reportname, (suffix || 0) + 1, callback);
				}
			}
			else {
				callback(null);
			}
		}
	);
};

mongoose.model('Report', reportSchema);