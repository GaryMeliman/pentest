var User = require('mongoose').model('User'), //loading User model
	Report = require('mongoose').model('Report'),
	passport = require('passport'); 

var getErrorMessage = function(err) {
	var message = ''; 
	if (err.code) {
		switch (err.code) {
			//##################################################################################################
			//http://stackoverflow.com/questions/18032879/mongodb-difference-between-error-code-11000-and-11001
			//##################################################################################################
			case 11000:
			case 11001:
				message = 'damn, thing already exists';
				break;
			default:
				message = 'oops something happen (?'; // podria cambiarse por un icono badge idk
		}
	}
	else {
		for (var errName in err.errors) {
			if (err.errors[errName].message)
				message = err.errors[errName].message;
		}
	}

	return message;
};


exports.renderAddReport = function(req, res, next) { //renderRegister
	if (!req.report) {
		res.render('addreport', { //register
			title: 'Add report',
			messages: req.flash('error')
		});
	}
	else {
		return res.redirect('/');
	}
};

exports.addreport = function(req, res, next) { //register
	if (!req.report) {
		var report = new Report(req.body); //req.body
		var message = null;
		//user.provider = 'local'; //local auth
		report.save(function(err) { //validation
			if (err) {
				var message = getErrorMessage(err);
				req.flash('error', message);
				return res.redirect('/addreport');
			}	

			/*req.login(user, function(err) {
				if (err) 
					return next(err);
				
				return res.redirect('/');
			});*/
		});
	}
	else {
		return res.redirect('/');
	}
};

/*
exports.logout = function(req, res) {
	req.logout();
	res.redirect('/');
};
*/

//CRUD ###################################################
exports.create = function(req, res, next) {	
	var report = new Report(req.body);
	report.save(function(err) {
		if (err) {
			return next(err);
		}
		else {
			res.json(report);
		}
	});
};

exports.read = function(req, res) {
	res.json(req.report);
};


exports.update = function(req, res, next) {
	Report.findByIdAndUpdate(req.report.id, req.body, function(err, report) {
		if (err) {
			return next(err);
		}
		else {
			res.json(report);
		}
	});
};

exports.delete = function(req, res, next) {
	req.report.remove(function(err) {
		if (err) {
			return next(err);
		}
		else {
			res.json(req.report);
		}
	})
};
//################################################################ easy peace 

exports.reportByID = function(req, res, next, id) {
	Report.findOne({
			_id: id //findbyId
		}, 
		function(err, report) {
			if (err) {
				return next(err);
			}
			else {
				req.report = report;
				next();
			}
		}
	);
};

exports.list = function(req, res, next) {
	Report.find({}, function(err, reports) {
		if (err) {
			return next(err);
		}							
		else {
			res.json(reports);
		}
	});
};
